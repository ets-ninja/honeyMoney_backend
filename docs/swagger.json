{
  "openapi": "3.0.0",
  "info": {
    "title": "HoneyMoney API overview",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5000/api",
      "description": "Loacal development server"
    }
  ],
  "paths": {
    "/auth/validate_email": {
      "get": {
        "summary": "Check if email is free to use",
        "tags": ["Authentication"],
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "description": "Valid email",
            "required": true,
            "schema": {
              "type": "string",
              "required": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "204 response"
          },
          "422": {
            "description": "422 response",
            "content": {
              "application/json": {
                "examples": {
                  "invalid_email": {
                    "value": "{\n \"message\": \"Invalid inputs passed.\"\n}\n"
                  },
                  "email_in_use": {
                    "value": "{\n \"message\": \"Email address already exists.\"\n}\n"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login user",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "examples": {
                  "succes": {
                    "value": "{\n \"userId\": \"user id here\",\n \"token\": \"User token here\"\n}\n"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "content": {
              "application/json": {
                "examples": {
                  "invalid_email": {
                    "value": "{\n \"message\": \"Invalid credentials, could not log you in.\"\n}\n"
                  },
                  "invalid_password": {
                    "value": "{\n \"message\": \"Invalid password, could not log you in.\"\n}\n"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/restore": {
      "post": {
        "summary": "Request restore password email",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "examples": {
                  "succes": {
                    "value": "{\n \"message\": \"Email send\"\n}\n"
                  }
                }
              }
            }
          },
          "422": {
            "description": "422 response",
            "content": {
              "application/json": {
                "examples": {
                  "invalid_email": {
                    "value": "{\n \"message\": \"Invalid email passed\"\n}\n"
                  }
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "examples": {
                  "invalid_email": {
                    "value": "{\n \"message\": \"Email address does not exists\"\n}\n"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/restore/{token}/{id}": {
      "post": {
        "summary": "Create new password",
        "tags": ["Authentication"],
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "description": "Valid restore token",
            "required": true,
            "schema": {
              "type": "string",
              "required": true
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "Valid user id",
            "required": true,
            "schema": {
              "type": "string",
              "required": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["password"],
                "properties": {
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "examples": {
                  "succes": {
                    "value": "{\n \"message\": \"Password updated\"\n}\n"
                  }
                }
              }
            }
          },
          "422": {
            "description": "422 response",
            "content": {
              "application/json": {
                "examples": {
                  "invalid_restore_token": {
                    "value": "{\n \"message\": \"Token is invalid or expired\"\n}\n"
                  },
                  "invalid_new_password": {
                    "value": "{\n \"message\": \"Password is too short.\"\n}\n"
                  }
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "examples": {
                  "invalid_email": {
                    "value": "{\n \"message\": \"Email address does not exists\"\n}\n"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "summary": "Get user details",
        "description": "Authorization header required",
        "tags": ["User"],
        "security": {
          "bearerAuth": []
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseUser"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/user/signup": {
      "post": {
        "summary": "Create user (Signup)",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201 response",
            "content": {
              "application/json": {
                "examples": {
                  "succes": {
                    "value": "{\n \"userId\": \"user id here\",\n \"token\": \"User token here\"\n}\n"
                  }
                }
              }
            }
          },
          "422": {
            "description": "422 response",
            "content": {
              "application/json": {
                "examples": {
                  "invalid_fields": {
                    "value": "{\n \"message\": \"Invalid inputs passed.\"\n}\n"
                  },
                  "email_occupied": {
                    "value": "{\n \"message\": \"User exists already, please login instead.\"\n}\n"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/update": {
      "patch": {
        "summary": "Update user",
        "description": "Authorization header required. \n At least one parameter is required",
        "tags": ["User"],
        "security": {
          "bearerAuth": []
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "publicName": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "examples": {
                  "succes": {
                    "value": "{\n \"userId\": \"user id here\",\n \"message\": \"User data updated\"\n}\n"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "422": {
            "description": "422 response",
            "content": {
              "application/json": {
                "examples": {
                  "invalid_fields": {
                    "value": "{\n \"message\": \"Invalid inputs passed.\"\n}\n"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/update_password": {
      "patch": {
        "summary": "Update users password",
        "description": "Authorization header required.",
        "tags": ["User"],
        "security": {
          "bearerAuth": []
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["password", "newPassword"],
                "properties": {
                  "password": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "examples": {
                  "succes": {
                    "value": "{\n \"userId\": \"user id here\",\n \"message\": \"User data updated\"\n}\n"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid password"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "required": ["firstName", "lastName", "email"],
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "publicName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "LoginUser": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "NewUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/User"
          },
          {
            "type": "object",
            "required": ["password"],
            "properties": {
              "password": {
                "type": "string"
              }
            }
          }
        ]
      },
      "ResponseUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/User"
          },
          {
            "type": "object",
            "properties": {
              "createdAt": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Access token is missing/invalid."
      }
    }
  }
}
